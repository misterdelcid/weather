{"version":3,"sources":["img/clear-skies_day2.jpg","img/clear-skies_night.jpg","img/clouds_day2.jpg","img/clouds_night.jpg","img/haze_day.jpg","img/haze_night.jpg","img/rain_day2.jpg","img/rain_night3.jpg","img/snow_day2.jpg","img/snow_night.jpg","img/thunder_day.jpg","img/thunder_night.jpg","img/standard.jpg","components/SearchBar.js","components/CityAndDate.js","components/WeatherDisplay.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledSearchBar","styled","div","StyledForm","form","StyledInput","input","attrs","id","StyledButton","button","SearchBar","props","useState","activeSearch","onSubmit","e","preventDefault","handleSearch","className","autoFocus","placeholder","value","query","onChange","event","setQuery","target","StyledCityAndDate","StyledCity","p","StyledDate","StyledShadow","CityAndDate","city","country","moment","format","StyledWeatherDisplay","StyledIconAndTemp","StyledIcon","img","StyledTemperature","StyledDegree","span","StyledDescription","StyledContainer","WeatherDisplay","description","src","icon","Math","round","temperature","temp","StyledApp","ClearSkiesDay","ClearSkiesNight","CloudyDay","CloudyNight","HazeDay","HazeNight","RainyNight","RainyDay","SnowyDay","SnowyNight","ThunderDay","ThunderNight","Standard","App","setSunrise","setSunset","setTemperature","setDescription","setCity","setCountry","setIcon","api","baseURL","key","Axios","get","then","result","data","main","weather","name","sys","sunrise","sunset","catch","error","console","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3539858a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clear-skies_day2.c634cf8a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clear-skies_night.ffcbb69d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clouds_day2.c18ee514.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clouds_night.88416c51.jpg\";","module.exports = __webpack_public_path__ + \"static/media/haze_day.9fa41c26.jpg\";","module.exports = __webpack_public_path__ + \"static/media/haze_night.6f07f418.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rain_day2.afe7a453.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rain_night3.cdb89ab6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snow_day2.3f1da173.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snow_night.20c8452c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thunder_day.18ddbfd4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thunder_night.1e9824ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/standard.c2a3c37a.jpg\";","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst SearchBar = (props) => {\r\n  const [activeSearch, setActiveSearch] = useState(false);\r\n\r\n  const handleSearchSubmit = e => {\r\n    e.preventDefault();\r\n    props.handleSearch();\r\n  }\r\n\r\n  return (\r\n    <StyledSearchBar activeSearch={activeSearch}>\r\n        <StyledForm\r\n          onSubmit={handleSearchSubmit}\r\n          className={`search-bar ${activeSearch ? \"open\" : \"\"}`}\r\n        >\r\n          <StyledButton>\r\n            <SearchIcon />\r\n          </StyledButton>\r\n          <StyledInput\r\n            autoFocus\r\n            placeholder=\"Search City\"\r\n            value={props.query}\r\n            onChange={(event) => props.setQuery(event.target.value)}\r\n          />\r\n        </StyledForm>\r\n    </StyledSearchBar>\r\n  );};\r\n\r\nconst StyledSearchBar = styled.div`\r\n  transition: width 1.25s;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n  border: none;\r\n  border-radius: 32px;\r\n  margin: 0 auto;\r\n  transition: .5s;\r\n  max-width: 600px;\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input.attrs(() => ({\r\n  id: \"search\",\r\n}))`\r\n  background-color: transparent;\r\n  border: none;\r\n  font-size: 1.8rem;\r\n  font-weight: 300;\r\n  color: #fff;\r\n  caret-color: #fff;\r\n  margin-left: 16px;\r\n  padding: 4px 0;\r\n  width: 100%;\r\n  line-height: 1;\r\n  &::placeholder {\r\n    color: rgba(255, 255, 255, 0.5);\r\n    font-weight: 300;\r\n    font-style: italic;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  background-color: transparent;\r\n  border-radius: 8px;\r\n  border: none;\r\n  outline: none;\r\n  padding: 8px 10px;\r\n  cursor: pointer;\r\n  &&& {\r\n    color: #fff;\r\n  }\r\n`\r\n\r\nexport default SearchBar;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport moment from \"moment\"\r\n\r\nconst CityAndDate = (props) => (\r\n  <StyledCityAndDate>\r\n    <div className={props.city ? 'city-date visible':'city-date'}>\r\n      <StyledCity>{`${props.city}, ${props.country}`}</StyledCity>\r\n      <StyledDate>{moment().format(\"dddd MMM Do\")}</StyledDate>\r\n      <StyledShadow />\r\n    </div>\r\n  </StyledCityAndDate>\r\n);\r\n\r\nconst StyledCityAndDate = styled.div`\r\n  margin: 60px auto;\r\n  color: #fff;\r\n  width: 300px;\r\n  text-align: center;\r\n  font-weight: 300;\r\n  text-shadow: 2px 1px 4px rgba(0, 0, 0, 1);\r\n  .city-date {\r\n    opacity: 0;\r\n    transform: translateY(30px);\r\n  }\r\n  .city-date.visible {\r\n    opacity: 1;\r\n    transform: translateY(0px);\r\n    transition: 1s;\r\n  }\r\n`;\r\n\r\nconst StyledCity = styled.p`\r\n  position: relative;\r\n  font-size: 1.8rem;\r\n  z-index: 5;\r\n  @media (min-width: 900px) {\r\n    font-size: 2.4rem;\r\n  }\r\n`;\r\n\r\nconst StyledDate = styled.p`\r\n  position: relative;\r\n  font-size: 1rem;\r\n  z-index: 5;\r\n  @media (min-width: 900px) {\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nconst StyledShadow = styled.div`\r\n  height: 100px;\r\n  width: 200px;\r\n  filter: blur(60px);\r\n  background-color: rgba(0,0,0, .35);\r\n  margin: -70px auto;\r\n  border-radius: 300px;\r\n  z-index: 0;\r\n`\r\n\r\nexport default CityAndDate;\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst WeatherDisplay = (props) => (\r\n  <StyledWeatherDisplay>\r\n    <StyledContainer>\r\n      <div className={props.description ? \"weather visible\" : \"weather\"}>\r\n        <StyledIconAndTemp>\r\n          <StyledIcon src={props.icon} />\r\n          <div>\r\n            <StyledTemperature>\r\n              {Math.round(props.temperature.temp)}\r\n              <StyledDegree>°</StyledDegree>\r\n            </StyledTemperature>\r\n            <StyledDescription>{props.description}</StyledDescription>\r\n          </div>\r\n        </StyledIconAndTemp>\r\n      </div>\r\n    </StyledContainer>\r\n  </StyledWeatherDisplay>\r\n);\r\n\r\nconst StyledWeatherDisplay = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: flex-end;\r\n  position: fixed;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  color: #fff;\r\n  height: 500px;\r\n  background-image: linear-gradient(\r\n    to bottom,\r\n    rgba(0, 0, 0, 0),\r\n    rgba(0, 0, 0, 0.9)\r\n  );\r\n  transition: 1s;\r\n  .weather {\r\n    opacity: 0;\r\n    transform: translateX(60px);\r\n  }\r\n  .weather.visible {\r\n    opacity: 1;\r\n    transform: translateX(0px);\r\n    transition: 1s;\r\n  }\r\n`;\r\n\r\nconst StyledIconAndTemp = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  margin: 0 0 60px 0;\r\n  @media (min-width: 900px) {\r\n    margin-bottom: 80px\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.img`\r\n  width: 90px;\r\n`;\r\n\r\nconst StyledTemperature = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 8rem;\r\n  font-weight: 300;\r\n  text-shadow: 4px 3px 8px rgba(0, 0, 0, 0.35);\r\n  margin: 0;\r\n  padding: 0;\r\n  line-height: 1;\r\n  @media (min-width: 900px) {\r\n    font-size: 9rem;\r\n  }\r\n`;\r\n\r\nconst StyledDegree = styled.span`\r\n  margin-top: 12px;\r\n  font-size: 4rem;\r\n  font-weight: 300;\r\n  line-height: 1;\r\n`;\r\n\r\nconst StyledDescription = styled.div`\r\n  margin: 0 10px;\r\n  padding: 0;\r\n  font-weight: 300;\r\n  font-style: italic;\r\n  font-size: 1rem;\r\n  line-height: 1;\r\n  text-shadow: 2px 1px 4px rgba(0, 0, 0, 0.35);\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n  width: 95%;\r\n  margin: 0 auto;\r\n  @media (min-width: 600px) {\r\n    width: 90%;\r\n  }\r\n  @media (min-width: 900px) {\r\n    width: 85%;\r\n  }\r\n`;\r\n\r\nexport default WeatherDisplay;","import React, { useState } from 'react'\nimport Axios from 'axios'\nimport styled from 'styled-components'\nimport { \n  SearchBar, \n  CityAndDate, \n  WeatherDisplay, \n  ClearSkiesDay, \n  ClearSkiesNight,\n  CloudyDay,\n  CloudyNight,\n  HazeDay,\n  HazeNight,\n  RainyDay,\n  RainyNight,\n  SnowyDay,\n  SnowyNight,\n  ThunderDay,\n  ThunderNight,\n  Standard,\n } from './components'\n\nconst App = () => {\n  const [sunrise, setSunrise] = useState('');\n  const [sunset, setSunset] = useState('');\n  const [temperature, setTemperature] = useState({temp: ''});\n  const [description, setDescription] = useState('');\n  const [city, setCity] = useState('');\n  const [country, setCountry] = useState('');\n  const [query, setQuery] = useState('');\n  const [icon, setIcon] = useState('');\n\n  const api = {\n    baseURL: \"https://api.openweathermap.org/data/2.5/weather\",\n    key: \"31a8ca3c090b163277e525f713e4101f\",\n    icon: `http://openweathermap.org/img/wn/${icon}@4x.png`,\n  };\n\n  const handleSearch = () => {\n      Axios.get(`${api.baseURL}?q=${query}&units=imperial&appid=${api.key}`)\n        .then(result => {\n          const data = result.data;\n          setTemperature(data.main);\n          setDescription(data.weather[0].description);\n          setCity(data.name);\n          setCountry(data.sys.country);\n          setIcon(data.weather[0].icon);\n          setQuery('');\n          setSunrise(data.sys.sunrise);\n          setSunset(data.sys.sunset);\n        })\n        .catch(error => console.error(error));\n    }\n\n  return (\n    <StyledApp icon={icon}>\n      <StyledContainer>\n        <SearchBar \n          query={query} \n          setQuery={setQuery} \n          handleSearch={handleSearch}\n        />\n        <CityAndDate \n          city={city}\n          country={country}\n        />\n        <WeatherDisplay \n          temperature={temperature}\n          description={description}\n          icon={api.icon}\n        />\n      </StyledContainer>\n    </StyledApp>\n  );\n};\n\nconst StyledApp = styled.div`\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  transition: 1s;\n  background: url(${props => \n    (props.icon === '01d' && ClearSkiesDay) ||\n    (props.icon === '01n' && ClearSkiesNight) ||\n    (props.icon === '02d' && CloudyDay) || \n    (props.icon === '03d' && CloudyDay) || \n    (props.icon === '04d' && CloudyDay) ||\n    (props.icon === '02n' && CloudyNight) || \n    (props.icon === '03n' && CloudyNight) || \n    (props.icon === '04n' && CloudyNight) || \n    (props.icon === '50d' && HazeDay) ||\n    (props.icon === '50n' && HazeNight) ||\n    (props.icon === '09d' && RainyNight) ||\n    (props.icon === '09n' && RainyNight) ||\n    (props.icon === '10d' && RainyDay) ||\n    (props.icon === '10n' && RainyNight) ||\n    (props.icon === '13d' && SnowyDay) ||\n    (props.icon === '13n' && SnowyNight) ||\n    (props.icon === '11d' && ThunderDay) ||\n    (props.icon === '11n' && ThunderNight) ||\n    Standard\n  }) no-repeat center center fixed;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: cover;\n`;\n\nconst StyledContainer = styled.div`\n  width: 95%;\n  margin: 0 auto;\n  padding-top: 30px;\n  @media (min-width: 600px) {\n    width: 90%;\n  }\n  @media (min-width: 900px) {\n    width: 85%;\n  }\n`;\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    font-family: \"Lato\", sans-serif;\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}